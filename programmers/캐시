#include <string>
#include <vector>
#include <algorithm>

using namespace std;

int solution(int cacheSize, vector<string> cities) {
    int answer = 0;
    vector <string> LRU;
    //대소문자를 전부 소문자로
    for(int i = 0 ; i < cities.size() ; i++)
    {
        transform(cities[i].begin(), cities[i].end(), cities[i].begin(), tolower);
    }
    
    //cache init    
    for (int i =0 ; i< cacheSize ; i++)
    {
        LRU.push_back(cities[i]);
        answer+=5;
    }    
    for(int i = cacheSize ; i< cities.size() ; i++)
    {
        for(int j =0 ; j< cacheSize ; j++)
        {
            if(LRU[j]==cities[i])
            {
                //cache hit!
                answer +=1;
                //LRU수정
                for(int k = j ; k < cacheSize-1 ; k++)
                {
                    LRU[k]=LRU[k+1];
                }
                LRU[cacheSize-1] = cities[i];   
                break;
            }
            if(j==cacheSize-1)
            {
                //cache miss!
                answer +=5;                
                //LRU수정
                for(int k = 0 ; k < cacheSize-1 ; k++)
                {
                    LRU[k]=LRU[k+1];
                }
                LRU[cacheSize-1] = cities[i];    
            }
        }
    }
    if (cacheSize ==0){
        return 5*cities.size();
    }
    return answer;
}
